ARM GAS  /tmp/ccMoyBY2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB138:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccMoyBY2.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** HCD_HandleTypeDef hhcd_USB_OTG_FS;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Definitions for defaultTask */
  49:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  50:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  51:Core/Src/main.c ****   .name = "defaultTask",
  52:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  53:Core/Src/main.c ****   .stack_size = 128 * 4
  54:Core/Src/main.c **** };
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  63:Core/Src/main.c **** static void MX_USB_OTG_FS_HCD_Init(void);
  64:Core/Src/main.c **** void StartDefaultTask(void *argument);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccMoyBY2.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   MX_USART2_UART_Init();
 104:Core/Src/main.c ****   MX_USB_OTG_FS_HCD_Init();
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END 2 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Init scheduler */
 110:Core/Src/main.c ****   osKernelInitialize();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 113:Core/Src/main.c ****   /* add mutexes, ... */
 114:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 117:Core/Src/main.c ****   /* add semaphores, ... */
 118:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 121:Core/Src/main.c ****   /* start timers, add new ones, ... */
 122:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 125:Core/Src/main.c ****   /* add queues, ... */
 126:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Create the thread(s) */
 129:Core/Src/main.c ****   /* creation of defaultTask */
 130:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 133:Core/Src/main.c ****   /* add threads, ... */
 134:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 137:Core/Src/main.c ****   /* add events, ... */
 138:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Start scheduler */
 141:Core/Src/main.c ****   osKernelStart();
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 144:Core/Src/main.c ****   /* Infinite loop */
 145:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  /tmp/ccMoyBY2.s 			page 4


 146:Core/Src/main.c ****   while (1)
 147:Core/Src/main.c ****   {
 148:Core/Src/main.c ****     /* USER CODE END WHILE */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c ****   /* USER CODE END 3 */
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****   * @brief System Clock Configuration
 157:Core/Src/main.c ****   * @retval None
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** void SystemClock_Config(void)
 160:Core/Src/main.c **** {
 161:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 162:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 163:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 169:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 170:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_CLK48;
 200:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48CLKSOURCE_PLLQ;
 201:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 202:Core/Src/main.c ****   {
ARM GAS  /tmp/ccMoyBY2.s 			page 5


 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****   * @brief USART2 Initialization Function
 209:Core/Src/main.c ****   * @param None
 210:Core/Src/main.c ****   * @retval None
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 213:Core/Src/main.c **** {
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 222:Core/Src/main.c ****   huart2.Instance = USART2;
 223:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 224:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 225:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 226:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 227:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 228:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 229:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 230:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 242:Core/Src/main.c ****   * @param None
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** static void MX_USB_OTG_FS_HCD_Init(void)
 246:Core/Src/main.c **** {
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 255:Core/Src/main.c ****   hhcd_USB_OTG_FS.Instance = USB_OTG_FS;
 256:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 12;
 257:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 258:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 259:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
ARM GAS  /tmp/ccMoyBY2.s 			page 6


 260:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 261:Core/Src/main.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 262:Core/Src/main.c ****   {
 263:Core/Src/main.c ****     Error_Handler();
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** }
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /**
 272:Core/Src/main.c ****   * @brief GPIO Initialization Function
 273:Core/Src/main.c ****   * @param None
 274:Core/Src/main.c ****   * @retval None
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c **** static void MX_GPIO_Init(void)
 277:Core/Src/main.c **** {
  28              		.loc 1 277 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 278:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 278 3 view .LVU1
  42              		.loc 1 278 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 281:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 281 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 281 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 281 3 view .LVU5
  54 0012 224B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 281 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 281 3 view .LVU7
ARM GAS  /tmp/ccMoyBY2.s 			page 7


  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 281 3 view .LVU8
 282:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 282 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 282 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 282 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 282 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 282 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 282 3 view .LVU14
 283:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 283 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 283 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 283 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 283 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 283 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 283 3 view .LVU20
 284:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 284 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 284 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 284 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 284 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 284 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 284 3 view .LVU26
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 287:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccMoyBY2.s 			page 8


 114              		.loc 1 287 3 view .LVU27
 115 0062 0F4D     		ldr	r5, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 2021     		movs	r1, #32
 118 0068 2846     		mov	r0, r5
 119 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 290:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 121              		.loc 1 290 3 view .LVU28
 122              		.loc 1 290 23 is_stmt 0 view .LVU29
 123 006e 4FF40053 		mov	r3, #8192
 124 0072 0593     		str	r3, [sp, #20]
 291:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 125              		.loc 1 291 3 is_stmt 1 view .LVU30
 126              		.loc 1 291 24 is_stmt 0 view .LVU31
 127 0074 0B4B     		ldr	r3, .L3+8
 128 0076 0693     		str	r3, [sp, #24]
 292:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 292 3 is_stmt 1 view .LVU32
 130              		.loc 1 292 24 is_stmt 0 view .LVU33
 131 0078 0794     		str	r4, [sp, #28]
 293:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 132              		.loc 1 293 3 is_stmt 1 view .LVU34
 133 007a 05A9     		add	r1, sp, #20
 134 007c 0A48     		ldr	r0, .L3+12
 135 007e FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL1:
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 296:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 137              		.loc 1 296 3 view .LVU35
 138              		.loc 1 296 23 is_stmt 0 view .LVU36
 139 0082 2023     		movs	r3, #32
 140 0084 0593     		str	r3, [sp, #20]
 297:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 141              		.loc 1 297 3 is_stmt 1 view .LVU37
 142              		.loc 1 297 24 is_stmt 0 view .LVU38
 143 0086 0123     		movs	r3, #1
 144 0088 0693     		str	r3, [sp, #24]
 298:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 298 3 is_stmt 1 view .LVU39
 146              		.loc 1 298 24 is_stmt 0 view .LVU40
 147 008a 0794     		str	r4, [sp, #28]
 299:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 299 3 is_stmt 1 view .LVU41
 149              		.loc 1 299 25 is_stmt 0 view .LVU42
 150 008c 0894     		str	r4, [sp, #32]
 300:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 151              		.loc 1 300 3 is_stmt 1 view .LVU43
 152 008e 05A9     		add	r1, sp, #20
 153 0090 2846     		mov	r0, r5
 154 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL2:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** }
ARM GAS  /tmp/ccMoyBY2.s 			page 9


 156              		.loc 1 302 1 is_stmt 0 view .LVU44
 157 0096 0BB0     		add	sp, sp, #44
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 12
 160              		@ sp needed
 161 0098 30BD     		pop	{r4, r5, pc}
 162              	.L4:
 163 009a 00BF     		.align	2
 164              	.L3:
 165 009c 00380240 		.word	1073887232
 166 00a0 00000240 		.word	1073872896
 167 00a4 00002110 		.word	270598144
 168 00a8 00080240 		.word	1073874944
 169              		.cfi_endproc
 170              	.LFE138:
 172              		.section	.text.StartDefaultTask,"ax",%progbits
 173              		.align	1
 174              		.global	StartDefaultTask
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
 180              	StartDefaultTask:
 181              	.LFB139:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /* USER CODE END 4 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 309:Core/Src/main.c **** /**
 310:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 311:Core/Src/main.c ****   * @param  argument: Not used
 312:Core/Src/main.c ****   * @retval None
 313:Core/Src/main.c ****   */
 314:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 315:Core/Src/main.c **** void StartDefaultTask(void *argument)
 316:Core/Src/main.c **** {
 182              		.loc 1 316 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ Volatile: function does not return.
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              	.LVL3:
 188              		.loc 1 316 1 is_stmt 0 view .LVU46
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 194              	.LVL4:
 195              	.L6:
 317:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 318:Core/Src/main.c ****   /* Infinite loop */
 319:Core/Src/main.c ****   for(;;)
 196              		.loc 1 319 3 is_stmt 1 discriminator 1 view .LVU47
 320:Core/Src/main.c ****   {
ARM GAS  /tmp/ccMoyBY2.s 			page 10


 321:Core/Src/main.c ****     osDelay(1);
 197              		.loc 1 321 5 discriminator 1 view .LVU48
 198 0002 0120     		movs	r0, #1
 199 0004 FFF7FEFF 		bl	osDelay
 200              	.LVL5:
 319:Core/Src/main.c ****   {
 201              		.loc 1 319 8 discriminator 1 view .LVU49
 202 0008 FBE7     		b	.L6
 203              		.cfi_endproc
 204              	.LFE139:
 206              		.section	.text.Error_Handler,"ax",%progbits
 207              		.align	1
 208              		.global	Error_Handler
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
 214              	Error_Handler:
 215              	.LFB140:
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c ****   /* USER CODE END 5 */
 324:Core/Src/main.c **** }
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** /**
 327:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 328:Core/Src/main.c ****   * @retval None
 329:Core/Src/main.c ****   */
 330:Core/Src/main.c **** void Error_Handler(void)
 331:Core/Src/main.c **** {
 216              		.loc 1 331 1 view -0
 217              		.cfi_startproc
 218              		@ Volatile: function does not return.
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 332:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 333:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 334:Core/Src/main.c ****   __disable_irq();
 222              		.loc 1 334 3 view .LVU51
 223              	.LBB8:
 224              	.LBI8:
 225              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccMoyBY2.s 			page 11


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccMoyBY2.s 			page 12


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /tmp/ccMoyBY2.s 			page 13


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 226              		.loc 2 140 27 view .LVU52
 227              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 228              		.loc 2 142 3 view .LVU53
 229              		.syntax unified
 230              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 231 0000 72B6     		cpsid i
 232              	@ 0 "" 2
 233              		.thumb
 234              		.syntax unified
 235              	.L9:
 236              	.LBE9:
 237              	.LBE8:
 335:Core/Src/main.c ****   while (1)
 238              		.loc 1 335 3 discriminator 1 view .LVU54
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****   }
 239              		.loc 1 337 3 discriminator 1 view .LVU55
 335:Core/Src/main.c ****   while (1)
 240              		.loc 1 335 9 discriminator 1 view .LVU56
 241 0002 FEE7     		b	.L9
 242              		.cfi_endproc
 243              	.LFE140:
 245              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 246              		.align	1
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv4-sp-d16
 252              	MX_USART2_UART_Init:
 253              	.LFB136:
 213:Core/Src/main.c **** 
 254              		.loc 1 213 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 08B5     		push	{r3, lr}
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 3, -8
 262              		.cfi_offset 14, -4
 222:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 263              		.loc 1 222 3 view .LVU58
 222:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 264              		.loc 1 222 19 is_stmt 0 view .LVU59
ARM GAS  /tmp/ccMoyBY2.s 			page 14


 265 0002 0A48     		ldr	r0, .L14
 266 0004 0A4B     		ldr	r3, .L14+4
 267 0006 0360     		str	r3, [r0]
 223:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 268              		.loc 1 223 3 is_stmt 1 view .LVU60
 223:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 269              		.loc 1 223 24 is_stmt 0 view .LVU61
 270 0008 4FF4E133 		mov	r3, #115200
 271 000c 4360     		str	r3, [r0, #4]
 224:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 272              		.loc 1 224 3 is_stmt 1 view .LVU62
 224:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 273              		.loc 1 224 26 is_stmt 0 view .LVU63
 274 000e 0023     		movs	r3, #0
 275 0010 8360     		str	r3, [r0, #8]
 225:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 276              		.loc 1 225 3 is_stmt 1 view .LVU64
 225:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 277              		.loc 1 225 24 is_stmt 0 view .LVU65
 278 0012 C360     		str	r3, [r0, #12]
 226:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 279              		.loc 1 226 3 is_stmt 1 view .LVU66
 226:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 280              		.loc 1 226 22 is_stmt 0 view .LVU67
 281 0014 0361     		str	r3, [r0, #16]
 227:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 282              		.loc 1 227 3 is_stmt 1 view .LVU68
 227:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 283              		.loc 1 227 20 is_stmt 0 view .LVU69
 284 0016 0C22     		movs	r2, #12
 285 0018 4261     		str	r2, [r0, #20]
 228:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 286              		.loc 1 228 3 is_stmt 1 view .LVU70
 228:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 287              		.loc 1 228 25 is_stmt 0 view .LVU71
 288 001a 8361     		str	r3, [r0, #24]
 229:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 289              		.loc 1 229 3 is_stmt 1 view .LVU72
 229:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 290              		.loc 1 229 28 is_stmt 0 view .LVU73
 291 001c C361     		str	r3, [r0, #28]
 230:Core/Src/main.c ****   {
 292              		.loc 1 230 3 is_stmt 1 view .LVU74
 230:Core/Src/main.c ****   {
 293              		.loc 1 230 7 is_stmt 0 view .LVU75
 294 001e FFF7FEFF 		bl	HAL_UART_Init
 295              	.LVL6:
 230:Core/Src/main.c ****   {
 296              		.loc 1 230 6 view .LVU76
 297 0022 00B9     		cbnz	r0, .L13
 238:Core/Src/main.c **** 
 298              		.loc 1 238 1 view .LVU77
 299 0024 08BD     		pop	{r3, pc}
 300              	.L13:
 232:Core/Src/main.c ****   }
 301              		.loc 1 232 5 is_stmt 1 view .LVU78
 302 0026 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccMoyBY2.s 			page 15


 303              	.LVL7:
 304              	.L15:
 305 002a 00BF     		.align	2
 306              	.L14:
 307 002c 00000000 		.word	huart2
 308 0030 00440040 		.word	1073759232
 309              		.cfi_endproc
 310              	.LFE136:
 312              		.section	.text.MX_USB_OTG_FS_HCD_Init,"ax",%progbits
 313              		.align	1
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv4-sp-d16
 319              	MX_USB_OTG_FS_HCD_Init:
 320              	.LFB137:
 246:Core/Src/main.c **** 
 321              		.loc 1 246 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI5:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 255:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 12;
 330              		.loc 1 255 3 view .LVU80
 255:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 12;
 331              		.loc 1 255 28 is_stmt 0 view .LVU81
 332 0002 0948     		ldr	r0, .L20
 333 0004 4FF0A043 		mov	r3, #1342177280
 334 0008 0360     		str	r3, [r0]
 256:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 335              		.loc 1 256 3 is_stmt 1 view .LVU82
 256:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 336              		.loc 1 256 38 is_stmt 0 view .LVU83
 337 000a 0C23     		movs	r3, #12
 338 000c 8360     		str	r3, [r0, #8]
 257:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 339              		.loc 1 257 3 is_stmt 1 view .LVU84
 257:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 340              		.loc 1 257 30 is_stmt 0 view .LVU85
 341 000e 0123     		movs	r3, #1
 342 0010 C360     		str	r3, [r0, #12]
 258:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 343              		.loc 1 258 3 is_stmt 1 view .LVU86
 258:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 344              		.loc 1 258 35 is_stmt 0 view .LVU87
 345 0012 0022     		movs	r2, #0
 346 0014 0261     		str	r2, [r0, #16]
 259:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 347              		.loc 1 259 3 is_stmt 1 view .LVU88
 259:Core/Src/main.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 348              		.loc 1 259 35 is_stmt 0 view .LVU89
 349 0016 0222     		movs	r2, #2
 350 0018 8261     		str	r2, [r0, #24]
ARM GAS  /tmp/ccMoyBY2.s 			page 16


 260:Core/Src/main.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 351              		.loc 1 260 3 is_stmt 1 view .LVU90
 260:Core/Src/main.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 352              		.loc 1 260 35 is_stmt 0 view .LVU91
 353 001a C361     		str	r3, [r0, #28]
 261:Core/Src/main.c ****   {
 354              		.loc 1 261 3 is_stmt 1 view .LVU92
 261:Core/Src/main.c ****   {
 355              		.loc 1 261 7 is_stmt 0 view .LVU93
 356 001c FFF7FEFF 		bl	HAL_HCD_Init
 357              	.LVL8:
 261:Core/Src/main.c ****   {
 358              		.loc 1 261 6 view .LVU94
 359 0020 00B9     		cbnz	r0, .L19
 269:Core/Src/main.c **** 
 360              		.loc 1 269 1 view .LVU95
 361 0022 08BD     		pop	{r3, pc}
 362              	.L19:
 263:Core/Src/main.c ****   }
 363              		.loc 1 263 5 is_stmt 1 view .LVU96
 364 0024 FFF7FEFF 		bl	Error_Handler
 365              	.LVL9:
 366              	.L21:
 367              		.align	2
 368              	.L20:
 369 0028 00000000 		.word	hhcd_USB_OTG_FS
 370              		.cfi_endproc
 371              	.LFE137:
 373              		.section	.text.SystemClock_Config,"ax",%progbits
 374              		.align	1
 375              		.global	SystemClock_Config
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu fpv4-sp-d16
 381              	SystemClock_Config:
 382              	.LFB135:
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 383              		.loc 1 160 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 176
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387 0000 10B5     		push	{r4, lr}
 388              	.LCFI6:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
 392 0002 ACB0     		sub	sp, sp, #176
 393              	.LCFI7:
 394              		.cfi_def_cfa_offset 184
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 395              		.loc 1 161 3 view .LVU98
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 396              		.loc 1 161 22 is_stmt 0 view .LVU99
 397 0004 3422     		movs	r2, #52
 398 0006 0021     		movs	r1, #0
 399 0008 1FA8     		add	r0, sp, #124
ARM GAS  /tmp/ccMoyBY2.s 			page 17


 400 000a FFF7FEFF 		bl	memset
 401              	.LVL10:
 162:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 402              		.loc 1 162 3 is_stmt 1 view .LVU100
 162:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 403              		.loc 1 162 22 is_stmt 0 view .LVU101
 404 000e 0024     		movs	r4, #0
 405 0010 1A94     		str	r4, [sp, #104]
 406 0012 1B94     		str	r4, [sp, #108]
 407 0014 1C94     		str	r4, [sp, #112]
 408 0016 1D94     		str	r4, [sp, #116]
 409 0018 1E94     		str	r4, [sp, #120]
 163:Core/Src/main.c **** 
 410              		.loc 1 163 3 is_stmt 1 view .LVU102
 163:Core/Src/main.c **** 
 411              		.loc 1 163 28 is_stmt 0 view .LVU103
 412 001a 5C22     		movs	r2, #92
 413 001c 2146     		mov	r1, r4
 414 001e 03A8     		add	r0, sp, #12
 415 0020 FFF7FEFF 		bl	memset
 416              	.LVL11:
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 417              		.loc 1 167 3 is_stmt 1 view .LVU104
 418              	.LBB10:
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 419              		.loc 1 167 3 view .LVU105
 420 0024 0194     		str	r4, [sp, #4]
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 421              		.loc 1 167 3 view .LVU106
 422 0026 254B     		ldr	r3, .L30
 423 0028 1A6C     		ldr	r2, [r3, #64]
 424 002a 42F08052 		orr	r2, r2, #268435456
 425 002e 1A64     		str	r2, [r3, #64]
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 426              		.loc 1 167 3 view .LVU107
 427 0030 1B6C     		ldr	r3, [r3, #64]
 428 0032 03F08053 		and	r3, r3, #268435456
 429 0036 0193     		str	r3, [sp, #4]
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 430              		.loc 1 167 3 view .LVU108
 431 0038 019B     		ldr	r3, [sp, #4]
 432              	.LBE10:
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 433              		.loc 1 167 3 view .LVU109
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 434              		.loc 1 168 3 view .LVU110
 435              	.LBB11:
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 436              		.loc 1 168 3 view .LVU111
 437 003a 0294     		str	r4, [sp, #8]
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 438              		.loc 1 168 3 view .LVU112
 439 003c 204A     		ldr	r2, .L30+4
 440 003e 1368     		ldr	r3, [r2]
 441 0040 23F44043 		bic	r3, r3, #49152
 442 0044 43F48043 		orr	r3, r3, #16384
 443 0048 1360     		str	r3, [r2]
ARM GAS  /tmp/ccMoyBY2.s 			page 18


 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 444              		.loc 1 168 3 view .LVU113
 445 004a 1368     		ldr	r3, [r2]
 446 004c 03F44043 		and	r3, r3, #49152
 447 0050 0293     		str	r3, [sp, #8]
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 448              		.loc 1 168 3 view .LVU114
 449 0052 029B     		ldr	r3, [sp, #8]
 450              	.LBE11:
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 451              		.loc 1 168 3 view .LVU115
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 452              		.loc 1 172 3 view .LVU116
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 453              		.loc 1 172 36 is_stmt 0 view .LVU117
 454 0054 0223     		movs	r3, #2
 455 0056 1F93     		str	r3, [sp, #124]
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 456              		.loc 1 173 3 is_stmt 1 view .LVU118
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 457              		.loc 1 173 30 is_stmt 0 view .LVU119
 458 0058 0122     		movs	r2, #1
 459 005a 2292     		str	r2, [sp, #136]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 460              		.loc 1 174 3 is_stmt 1 view .LVU120
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 461              		.loc 1 174 41 is_stmt 0 view .LVU121
 462 005c 1022     		movs	r2, #16
 463 005e 2392     		str	r2, [sp, #140]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 464              		.loc 1 175 3 is_stmt 1 view .LVU122
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 465              		.loc 1 175 34 is_stmt 0 view .LVU123
 466 0060 2593     		str	r3, [sp, #148]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 467              		.loc 1 176 3 is_stmt 1 view .LVU124
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 468              		.loc 1 176 35 is_stmt 0 view .LVU125
 469 0062 2694     		str	r4, [sp, #152]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 470              		.loc 1 177 3 is_stmt 1 view .LVU126
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 471              		.loc 1 177 30 is_stmt 0 view .LVU127
 472 0064 2792     		str	r2, [sp, #156]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 473              		.loc 1 178 3 is_stmt 1 view .LVU128
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 474              		.loc 1 178 30 is_stmt 0 view .LVU129
 475 0066 4FF4A872 		mov	r2, #336
 476 006a 2892     		str	r2, [sp, #160]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 477              		.loc 1 179 3 is_stmt 1 view .LVU130
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 478              		.loc 1 179 30 is_stmt 0 view .LVU131
 479 006c 0422     		movs	r2, #4
 480 006e 2992     		str	r2, [sp, #164]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
ARM GAS  /tmp/ccMoyBY2.s 			page 19


 481              		.loc 1 180 3 is_stmt 1 view .LVU132
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 482              		.loc 1 180 30 is_stmt 0 view .LVU133
 483 0070 2A93     		str	r3, [sp, #168]
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 484              		.loc 1 181 3 is_stmt 1 view .LVU134
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 485              		.loc 1 181 30 is_stmt 0 view .LVU135
 486 0072 2B93     		str	r3, [sp, #172]
 182:Core/Src/main.c ****   {
 487              		.loc 1 182 3 is_stmt 1 view .LVU136
 182:Core/Src/main.c ****   {
 488              		.loc 1 182 7 is_stmt 0 view .LVU137
 489 0074 1FA8     		add	r0, sp, #124
 490 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 491              	.LVL12:
 182:Core/Src/main.c ****   {
 492              		.loc 1 182 6 view .LVU138
 493 007a C0B9     		cbnz	r0, .L27
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 494              		.loc 1 188 3 is_stmt 1 view .LVU139
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 495              		.loc 1 188 31 is_stmt 0 view .LVU140
 496 007c 0F23     		movs	r3, #15
 497 007e 1A93     		str	r3, [sp, #104]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 498              		.loc 1 190 3 is_stmt 1 view .LVU141
 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 499              		.loc 1 190 34 is_stmt 0 view .LVU142
 500 0080 0221     		movs	r1, #2
 501 0082 1B91     		str	r1, [sp, #108]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 502              		.loc 1 191 3 is_stmt 1 view .LVU143
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 503              		.loc 1 191 35 is_stmt 0 view .LVU144
 504 0084 0023     		movs	r3, #0
 505 0086 1C93     		str	r3, [sp, #112]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 506              		.loc 1 192 3 is_stmt 1 view .LVU145
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 507              		.loc 1 192 36 is_stmt 0 view .LVU146
 508 0088 4FF48052 		mov	r2, #4096
 509 008c 1D92     		str	r2, [sp, #116]
 193:Core/Src/main.c **** 
 510              		.loc 1 193 3 is_stmt 1 view .LVU147
 193:Core/Src/main.c **** 
 511              		.loc 1 193 36 is_stmt 0 view .LVU148
 512 008e 1E93     		str	r3, [sp, #120]
 195:Core/Src/main.c ****   {
 513              		.loc 1 195 3 is_stmt 1 view .LVU149
 195:Core/Src/main.c ****   {
 514              		.loc 1 195 7 is_stmt 0 view .LVU150
 515 0090 1AA8     		add	r0, sp, #104
 516 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 517              	.LVL13:
 195:Core/Src/main.c ****   {
 518              		.loc 1 195 6 view .LVU151
ARM GAS  /tmp/ccMoyBY2.s 			page 20


 519 0096 60B9     		cbnz	r0, .L28
 199:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48CLKSOURCE_PLLQ;
 520              		.loc 1 199 3 is_stmt 1 view .LVU152
 199:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48CLKSOURCE_PLLQ;
 521              		.loc 1 199 44 is_stmt 0 view .LVU153
 522 0098 4FF48073 		mov	r3, #256
 523 009c 0393     		str	r3, [sp, #12]
 200:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 524              		.loc 1 200 3 is_stmt 1 view .LVU154
 200:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 525              		.loc 1 200 43 is_stmt 0 view .LVU155
 526 009e 0023     		movs	r3, #0
 527 00a0 1893     		str	r3, [sp, #96]
 201:Core/Src/main.c ****   {
 528              		.loc 1 201 3 is_stmt 1 view .LVU156
 201:Core/Src/main.c ****   {
 529              		.loc 1 201 7 is_stmt 0 view .LVU157
 530 00a2 03A8     		add	r0, sp, #12
 531 00a4 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 532              	.LVL14:
 201:Core/Src/main.c ****   {
 533              		.loc 1 201 6 view .LVU158
 534 00a8 28B9     		cbnz	r0, .L29
 205:Core/Src/main.c **** 
 535              		.loc 1 205 1 view .LVU159
 536 00aa 2CB0     		add	sp, sp, #176
 537              	.LCFI8:
 538              		.cfi_remember_state
 539              		.cfi_def_cfa_offset 8
 540              		@ sp needed
 541 00ac 10BD     		pop	{r4, pc}
 542              	.L27:
 543              	.LCFI9:
 544              		.cfi_restore_state
 184:Core/Src/main.c ****   }
 545              		.loc 1 184 5 is_stmt 1 view .LVU160
 546 00ae FFF7FEFF 		bl	Error_Handler
 547              	.LVL15:
 548              	.L28:
 197:Core/Src/main.c ****   }
 549              		.loc 1 197 5 view .LVU161
 550 00b2 FFF7FEFF 		bl	Error_Handler
 551              	.LVL16:
 552              	.L29:
 203:Core/Src/main.c ****   }
 553              		.loc 1 203 5 view .LVU162
 554 00b6 FFF7FEFF 		bl	Error_Handler
 555              	.LVL17:
 556              	.L31:
 557 00ba 00BF     		.align	2
 558              	.L30:
 559 00bc 00380240 		.word	1073887232
 560 00c0 00700040 		.word	1073770496
 561              		.cfi_endproc
 562              	.LFE135:
 564              		.section	.text.main,"ax",%progbits
 565              		.align	1
ARM GAS  /tmp/ccMoyBY2.s 			page 21


 566              		.global	main
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	main:
 573              	.LFB134:
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 574              		.loc 1 80 1 view -0
 575              		.cfi_startproc
 576              		@ Volatile: function does not return.
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 08B5     		push	{r3, lr}
 580              	.LCFI10:
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 3, -8
 583              		.cfi_offset 14, -4
  88:Core/Src/main.c **** 
 584              		.loc 1 88 3 view .LVU164
 585 0002 FFF7FEFF 		bl	HAL_Init
 586              	.LVL18:
  95:Core/Src/main.c **** 
 587              		.loc 1 95 3 view .LVU165
 588 0006 FFF7FEFF 		bl	SystemClock_Config
 589              	.LVL19:
 102:Core/Src/main.c ****   MX_USART2_UART_Init();
 590              		.loc 1 102 3 view .LVU166
 591 000a FFF7FEFF 		bl	MX_GPIO_Init
 592              	.LVL20:
 103:Core/Src/main.c ****   MX_USB_OTG_FS_HCD_Init();
 593              		.loc 1 103 3 view .LVU167
 594 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 595              	.LVL21:
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 596              		.loc 1 104 3 view .LVU168
 597 0012 FFF7FEFF 		bl	MX_USB_OTG_FS_HCD_Init
 598              	.LVL22:
 110:Core/Src/main.c **** 
 599              		.loc 1 110 3 view .LVU169
 600 0016 FFF7FEFF 		bl	osKernelInitialize
 601              	.LVL23:
 130:Core/Src/main.c **** 
 602              		.loc 1 130 3 view .LVU170
 130:Core/Src/main.c **** 
 603              		.loc 1 130 23 is_stmt 0 view .LVU171
 604 001a 054A     		ldr	r2, .L35
 605 001c 0021     		movs	r1, #0
 606 001e 0548     		ldr	r0, .L35+4
 607 0020 FFF7FEFF 		bl	osThreadNew
 608              	.LVL24:
 130:Core/Src/main.c **** 
 609              		.loc 1 130 21 view .LVU172
 610 0024 044B     		ldr	r3, .L35+8
 611 0026 1860     		str	r0, [r3]
 141:Core/Src/main.c **** 
 612              		.loc 1 141 3 is_stmt 1 view .LVU173
ARM GAS  /tmp/ccMoyBY2.s 			page 22


 613 0028 FFF7FEFF 		bl	osKernelStart
 614              	.LVL25:
 615              	.L33:
 146:Core/Src/main.c ****   {
 616              		.loc 1 146 3 discriminator 1 view .LVU174
 151:Core/Src/main.c ****   /* USER CODE END 3 */
 617              		.loc 1 151 3 discriminator 1 view .LVU175
 146:Core/Src/main.c ****   {
 618              		.loc 1 146 9 discriminator 1 view .LVU176
 619 002c FEE7     		b	.L33
 620              	.L36:
 621 002e 00BF     		.align	2
 622              	.L35:
 623 0030 00000000 		.word	.LANCHOR0
 624 0034 00000000 		.word	StartDefaultTask
 625 0038 00000000 		.word	defaultTaskHandle
 626              		.cfi_endproc
 627              	.LFE134:
 629              		.global	defaultTask_attributes
 630              		.section	.rodata.str1.4,"aMS",%progbits,1
 631              		.align	2
 632              	.LC0:
 633 0000 64656661 		.ascii	"defaultTask\000"
 633      756C7454 
 633      61736B00 
 634              		.comm	defaultTaskHandle,4,4
 635              		.comm	hhcd_USB_OTG_FS,708,4
 636              		.comm	huart2,64,4
 637              		.section	.rodata.defaultTask_attributes,"a"
 638              		.align	2
 639              		.set	.LANCHOR0,. + 0
 642              	defaultTask_attributes:
 643 0000 00000000 		.word	.LC0
 644 0004 00000000 		.space	16
 644      00000000 
 644      00000000 
 644      00000000 
 645 0014 00020000 		.word	512
 646 0018 18000000 		.word	24
 647 001c 00000000 		.space	8
 647      00000000 
 648              		.text
 649              	.Letext0:
 650              		.file 3 "/home/faoziaziz/dev/installer/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/ma
 651              		.file 4 "/home/faoziaziz/dev/installer/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sy
 652              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 653              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 654              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 655              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 656              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 657              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 658              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 659              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 660              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 661              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 662              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 663              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_hcd.h"
ARM GAS  /tmp/ccMoyBY2.s 			page 23


 664              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 665              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 666              		.file 19 "<built-in>"
ARM GAS  /tmp/ccMoyBY2.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccMoyBY2.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccMoyBY2.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccMoyBY2.s:165    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/ccMoyBY2.s:173    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccMoyBY2.s:180    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccMoyBY2.s:207    .text.Error_Handler:0000000000000000 $t
     /tmp/ccMoyBY2.s:214    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccMoyBY2.s:246    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccMoyBY2.s:252    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccMoyBY2.s:307    .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000040 huart2
     /tmp/ccMoyBY2.s:313    .text.MX_USB_OTG_FS_HCD_Init:0000000000000000 $t
     /tmp/ccMoyBY2.s:319    .text.MX_USB_OTG_FS_HCD_Init:0000000000000000 MX_USB_OTG_FS_HCD_Init
     /tmp/ccMoyBY2.s:369    .text.MX_USB_OTG_FS_HCD_Init:0000000000000028 $d
                            *COM*:00000000000002c4 hhcd_USB_OTG_FS
     /tmp/ccMoyBY2.s:374    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccMoyBY2.s:381    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccMoyBY2.s:559    .text.SystemClock_Config:00000000000000bc $d
     /tmp/ccMoyBY2.s:565    .text.main:0000000000000000 $t
     /tmp/ccMoyBY2.s:572    .text.main:0000000000000000 main
     /tmp/ccMoyBY2.s:623    .text.main:0000000000000030 $d
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccMoyBY2.s:642    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccMoyBY2.s:631    .rodata.str1.4:0000000000000000 $d
     /tmp/ccMoyBY2.s:638    .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
HAL_UART_Init
HAL_HCD_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
osKernelInitialize
osThreadNew
osKernelStart
