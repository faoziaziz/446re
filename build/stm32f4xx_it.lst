ARM GAS  /tmp/ccIpf3qt.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB134:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** #include "FreeRTOS.h"
  25:Core/Src/stm32f4xx_it.c **** #include "task.h"
  26:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccIpf3qt.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  59:Core/Src/stm32f4xx_it.c **** 
  60:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Core/Src/stm32f4xx_it.c **** 
  62:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  63:Core/Src/stm32f4xx_it.c **** 
  64:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  65:Core/Src/stm32f4xx_it.c **** 
  66:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  68:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f4xx_it.c **** /**
  70:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Core/Src/stm32f4xx_it.c ****   */
  72:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  73:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 73 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  74:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f4xx_it.c **** 
  76:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 78 3 discriminator 1 view .LVU1
  79:Core/Src/stm32f4xx_it.c ****   {
ARM GAS  /tmp/ccIpf3qt.s 			page 3


  80:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 80 3 discriminator 1 view .LVU2
  78:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 78 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE134:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB135:
  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f4xx_it.c **** }
  83:Core/Src/stm32f4xx_it.c **** 
  84:Core/Src/stm32f4xx_it.c **** /**
  85:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f4xx_it.c ****   */
  87:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f4xx_it.c **** {
  53              		.loc 1 88 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  89:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f4xx_it.c **** 
  91:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f4xx_it.c ****   while (1)
  60              		.loc 1 92 3 discriminator 1 view .LVU5
  93:Core/Src/stm32f4xx_it.c ****   {
  94:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c ****   }
  61              		.loc 1 96 3 discriminator 1 view .LVU6
  92:Core/Src/stm32f4xx_it.c ****   {
  62              		.loc 1 92 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE135:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
  76              	.LFB136:
  97:Core/Src/stm32f4xx_it.c **** }
  98:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccIpf3qt.s 			page 4


  99:Core/Src/stm32f4xx_it.c **** /**
 100:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 101:Core/Src/stm32f4xx_it.c ****   */
 102:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 103:Core/Src/stm32f4xx_it.c **** {
  77              		.loc 1 103 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 104:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:Core/Src/stm32f4xx_it.c **** 
 106:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f4xx_it.c ****   while (1)
  84              		.loc 1 107 3 discriminator 1 view .LVU9
 108:Core/Src/stm32f4xx_it.c ****   {
 109:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c ****   }
  85              		.loc 1 111 3 discriminator 1 view .LVU10
 107:Core/Src/stm32f4xx_it.c ****   {
  86              		.loc 1 107 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE136:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB137:
 112:Core/Src/stm32f4xx_it.c **** }
 113:Core/Src/stm32f4xx_it.c **** 
 114:Core/Src/stm32f4xx_it.c **** /**
 115:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 116:Core/Src/stm32f4xx_it.c ****   */
 117:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 118:Core/Src/stm32f4xx_it.c **** {
 101              		.loc 1 118 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 119:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 120:Core/Src/stm32f4xx_it.c **** 
 121:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c ****   while (1)
 108              		.loc 1 122 3 discriminator 1 view .LVU13
 123:Core/Src/stm32f4xx_it.c ****   {
 124:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccIpf3qt.s 			page 5


 125:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c ****   }
 109              		.loc 1 126 3 discriminator 1 view .LVU14
 122:Core/Src/stm32f4xx_it.c ****   {
 110              		.loc 1 122 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE137:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB138:
 127:Core/Src/stm32f4xx_it.c **** }
 128:Core/Src/stm32f4xx_it.c **** 
 129:Core/Src/stm32f4xx_it.c **** /**
 130:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 131:Core/Src/stm32f4xx_it.c ****   */
 132:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 133:Core/Src/stm32f4xx_it.c **** {
 125              		.loc 1 133 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 134:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 135:Core/Src/stm32f4xx_it.c **** 
 136:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c ****   while (1)
 132              		.loc 1 137 3 discriminator 1 view .LVU17
 138:Core/Src/stm32f4xx_it.c ****   {
 139:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c ****   }
 133              		.loc 1 141 3 discriminator 1 view .LVU18
 137:Core/Src/stm32f4xx_it.c ****   {
 134              		.loc 1 137 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE138:
 139              		.section	.text.DebugMon_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	DebugMon_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	DebugMon_Handler:
 148              	.LFB139:
 142:Core/Src/stm32f4xx_it.c **** }
 143:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccIpf3qt.s 			page 6


 144:Core/Src/stm32f4xx_it.c **** /**
 145:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 146:Core/Src/stm32f4xx_it.c ****   */
 147:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 148:Core/Src/stm32f4xx_it.c **** {
 149              		.loc 1 148 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 149:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 150:Core/Src/stm32f4xx_it.c **** 
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 153:Core/Src/stm32f4xx_it.c **** 
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 155:Core/Src/stm32f4xx_it.c **** }
 154              		.loc 1 155 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE139:
 159              		.section	.text.SysTick_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	SysTick_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	SysTick_Handler:
 168              	.LFB140:
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c **** /**
 158:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 159:Core/Src/stm32f4xx_it.c ****   */
 160:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 161:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 161 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI0:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 162:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 163:Core/Src/stm32f4xx_it.c **** 
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 165:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 178              		.loc 1 165 3 view .LVU23
 179 0002 FFF7FEFF 		bl	HAL_IncTick
 180              	.LVL0:
 166:Core/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 167:Core/Src/stm32f4xx_it.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 181              		.loc 1 167 3 view .LVU24
 182              		.loc 1 167 7 is_stmt 0 view .LVU25
 183 0006 FFF7FEFF 		bl	xTaskGetSchedulerState
ARM GAS  /tmp/ccIpf3qt.s 			page 7


 184              	.LVL1:
 185              		.loc 1 167 6 view .LVU26
 186 000a 0128     		cmp	r0, #1
 187 000c 00D1     		bne	.L15
 188              	.L12:
 168:Core/Src/stm32f4xx_it.c ****   {
 169:Core/Src/stm32f4xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 170:Core/Src/stm32f4xx_it.c ****   xPortSysTickHandler();
 171:Core/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 172:Core/Src/stm32f4xx_it.c ****   }
 173:Core/Src/stm32f4xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 177:Core/Src/stm32f4xx_it.c **** }
 189              		.loc 1 177 1 view .LVU27
 190 000e 08BD     		pop	{r3, pc}
 191              	.L15:
 170:Core/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1 )
 192              		.loc 1 170 3 is_stmt 1 view .LVU28
 193 0010 FFF7FEFF 		bl	xPortSysTickHandler
 194              	.LVL2:
 195              		.loc 1 177 1 is_stmt 0 view .LVU29
 196 0014 FBE7     		b	.L12
 197              		.cfi_endproc
 198              	.LFE140:
 200              		.text
 201              	.Letext0:
 202              		.file 2 "/home/faoziaziz/dev/installer/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/ma
 203              		.file 3 "/home/faoziaziz/dev/installer/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sy
 204              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 205              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 206              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 207              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 208              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 209              		.file 9 "Core/Inc/FreeRTOSConfig.h"
ARM GAS  /tmp/ccIpf3qt.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccIpf3qt.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccIpf3qt.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccIpf3qt.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccIpf3qt.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccIpf3qt.s:68     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccIpf3qt.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccIpf3qt.s:92     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccIpf3qt.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccIpf3qt.s:116    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccIpf3qt.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccIpf3qt.s:140    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccIpf3qt.s:147    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccIpf3qt.s:160    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccIpf3qt.s:167    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
xTaskGetSchedulerState
xPortSysTickHandler
